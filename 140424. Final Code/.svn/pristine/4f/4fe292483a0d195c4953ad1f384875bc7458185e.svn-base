#********************************************************************
# Wrapper Properties
#********************************************************************
# Java Application
wrapper.java.command=java

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=../lib/wrapper.jar
wrapper.java.classpath.2=../jes.jar

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=../lib

wrapper.java.library.path.append_system_path=true

# Java Additional Parameters
wrapper.java.additional.1=-client
wrapper.java.additional.2=-Xmx512m
wrapper.java.additional.3=-Ddns.simple=true
wrapper.java.additional.4=-Ddns.mode=recursive
wrapper.java.additional.5=-Dsun.net.spi.nameservice.provider.1=dns,dnsJES
wrapper.java.additional.6=-Djava.security.policy=../jes.policy

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=32

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=512

# JVM ShutDown Time
wrapper.jvm_exit.timeout=150

# Application parameters.  Add parameters as needed starting from 2
# DO NOT ALTER THE FIRST ENTRY
# The .2 entry points to the JES installation dir and is required
# The .3 entry is passed in from the jes.sh script and corresponds
# to the uid of the 'jeserver' user. Alternatively, it can be used
# to add the 'testing' parameter to the initializing arguments of
# the application
# The .4 entry can be optionally used if both the jes.sh script is
# used and the 'testing' parameter is desired. This is considered
# an exotic scenario and is not recommended.
# Note: No check is made if a 3rd entry is explicitly defined in
# this configuration file and a 3rd entry is passed by jes.sh or
# any other script. Which entry takes precedence is also not clear.
wrapper.app.parameter.1=com.ericdaugherty.mail.server.Mail
wrapper.app.parameter.2=
#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=../logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=500k

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=20

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=Java Email Server

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.ntservice.name=Java_Email_Server

# Display name of the service
wrapper.ntservice.displayname=Java Email Server

# Description of the service
wrapper.ntservice.description=Java Email Server

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=

# Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=true

