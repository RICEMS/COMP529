# Java Email Server (JES) User Configuration
#
# NOTE This file is ignored when a db is used as a backend
#
# All users are defined in this file.  To add a user, follow
# the next pattern:
# user.<username@domain>=<plain text password>
#
# The username is treated in a case-sensitive manner, whereas the domain is
# treated in a case-insensitive one (However, the casing is preserved).
#
# The plain text password will be converted to a hash when the file
# is first persisted by the server.
#
# Additional configuration such as forward addresses can be specified as:
# userprop.<username@domain>.forwardAddresses=<Comma list of forward addresses>
#
# When a message is received for a local user, the user's address will be replaced
# with the addresses in the forwardAddresses property.  If you also wish to have
# a copy delivered to the local user, you may add the user's local address to
# the forwardAddresses property.
# Adding a user directly to this file while the server is running allows a user
# to be a member of the null realm and the domain-as-realm realm alone. If it is
# desired that this user be a part of any number of realms, the server has to go
# offline and the user respecified in this file. Then add the user to the desired
# realms and restart the server.
# Alternatively, if the purpose is to add(delete) a user without restarting the
# server, then first add(delete) the user to(from) the realms file and subsequently
# from the users file. When JES reloads the realms and users, entries in user.conf
# are always loaded first. Therefore, in case you are a adding a user, since no
# new user has yet been loaded, the user entry in realms.conf is ignored. When
# user.conf is saved (with the new user), JES reloads the realms and users. This
# time a user has been loaded and the realm entry is handled in the regular manner.
# Please note that in order to save a user's realm password, either the user has
# to be newly added, or the user's password in the users file is re-entered. If
# an existing user is added to a realm and the password's hash is stored, rather
# than the original plaintext password, then no realm password will be recorded
# for this user. This applies whether or not the realm is a new or existing one.
# There is also the choice of using the CBC for this very purpose. Please read
# the documenantion in order to successfully user the CBC to add a new user.
# NOTE This file is ignored when a db is used as a backend
#
#Examples
#user.admin@mydomain.com=adminpassword
#userprop.admin@mydomain.com.forwardAddresses=other@other.domain.net
